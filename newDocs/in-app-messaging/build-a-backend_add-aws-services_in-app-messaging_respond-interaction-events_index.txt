You can respond with additional behavior to your users interacting with in-app messages by adding interaction event listeners. 

To respond to an in-app message being received, add an `onMessageReceived` listener. This is necessary if you are implementing a custom UI so that your UI can respond to event-triggered campaign messages. Here is an example of how to add this listener in React:

```javascript
import { onMessageReceived } from 'aws-amplify/in-app-messaging';

const myMessageReceivedHandler = (message) => {
  // Do something with the received message
};

const listener = onMessageReceived(myMessageReceivedHandler);

listener.remove(); // Remember to remove the listener when it is no longer needed
```

To respond to an in-app message being displayed, add an `onMessageDisplayed` listener. Here is an example:

```javascript
import { onMessageDisplayed } from 'aws-amplify/in-app-messaging';

const myMessageDisplayedHandler = (message) => {
  // Do something with the displayed message
};

const listener = onMessageDisplayed(myMessageDisplayedHandler);

listener.remove(); // Remember to remove the listener when it is no longer needed
```

To respond to an in-app message being dismissed, add an `onMessageDismissed` listener. Here is an example:

```javascript
import { onMessageDismissed } from 'aws-amplify/in-app-messaging';

const myMessageDismissedHandler = (message) => {
  // Do something with the dismissed message
};

const listener = onMessageDismissed(myMessageDismissedHandler);

listener.remove(); // Remember to remove the listener when it is no longer needed
```

To respond to an action being taken on an in-app message, add an `onMessageActionTaken` listener. Here is an example:

```javascript
import { onMessageActionTaken } from 'aws-amplify/in-app-messaging';

const myMessageActionTakenHandler = (message) => {
  // Do something with the message action was taken against
};

const listener = onMessageActionTaken(myMessageActionTakenHandler);

listener.remove(); // Remember to remove the listener when it is no longer needed
```

If you are implementing your own UI, it is recommended to notify listeners of interaction events through your UI code so that the library can take further actions. Here is an example:

```javascript
import { notifyMessageInteraction } from 'aws-amplify/in-app-messaging';

const message = {
  // In-app message that you want to record an interaction on
}

// Interaction events that can be notified correspond to their respective listeners:
//    'messageReceived'
//    'messageDisplayed'
//    'messageDismissed'
//    'messageActionTaken'
notifyMessageInteraction({ message, type: 'messageDisplayed' });
```
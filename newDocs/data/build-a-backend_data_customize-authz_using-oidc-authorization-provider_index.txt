To use OpenID Connect as an authorization provider in your React application, you can configure it with private, owner, and group authorization strategies. To do this, add "oidc" to the authorization rule as the provider. You will also need to configure the OpenID Connect provider name, OpenID Connect provider domain, Client ID, Issued at TTL, and Auth Time TTL using the `oidcAuthorizationMode` property.

Here's an example of how to configure the authorization strategies with an "oidc" authorization provider. For owner and group-based authorization, you will also need to specify a custom identity and group claim.

```javascript
// amplify/data/resource.js
import { Amplify } from 'aws-amplify';
import { withSSRContext } from 'aws-amplify';

const schema = {
  Todo: {
    type: 'object',
    properties: {
      content: { type: 'string' },
    },
    required: ['content'],
  },
};

const authorizationModes = {
  defaultAuthorizationMode: 'oidc',
  oidcAuthorizationMode: {
    oidcProviderName: 'oidc-provider-name',
    oidcIssuerUrl: 'https://example.com',
    clientId: 'client-id',
    tokenExpiryFromAuthInSeconds: 300,
    tokenExpireFromIssueInSeconds: 600,
  },
};

Amplify.configure({
  aws_appsync_authenticationType: 'OIDC',
  aws_appsync_oidcProvider: {
    issuerUrl: authorizationModes.oidcAuthorizationMode.oidcIssuerUrl,
    clientId: authorizationModes.oidcAuthorizationMode.clientId,
  },
});

const { DataStore } = withSSRContext({ Amplify });

DataStore HubbubModel = {
  Todo: {
    authorization: {
      allow: [
        {
          owner: 'oidc',
          identityClaim: 'user_id',
        },
        {
          authenticated: 'oidc',
        },
        {
          groups: ['testGroupName'],
          withClaimIn: 'user_groups',
        },
      ],
    },
  },
};
```

To perform CRUD operations against the model, you can use the `DataStore` and specify the `oidc` auth mode.

```javascript
import Amplify from 'aws-amplify';
import { withSSRContext } from 'aws-amplify';

const { DataStore } = withSSRContext({ Amplify });

const todo = await DataStore.save(
  new Todo({ content: 'My new todo' }),
  { authMode: 'oidc' }
);

const todos = await DataStore.query(Todo, { authMode: 'oidc' });
```
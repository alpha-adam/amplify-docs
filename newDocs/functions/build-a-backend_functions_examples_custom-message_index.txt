To customize the message sent to users in AWS Amplify, you can use an Auth custom message authentication trigger. This trigger allows you to send a custom email or phone verification message, or a multi-factor authentication (MFA) code.

To get started, you need to create a new directory and a resource file, then define the function using `defineFunction`. 

```typescript
import { defineFunction } from '@aws-amplify/backend';

export const customMessage = defineFunction({
  name: "custom-message",
  resourceGroupName: 'auth'
});
```

Next, create the corresponding handler file with the following contents:

```typescript
import type { CustomMessageTriggerHandler } from "aws-lambda";

export const handler: CustomMessageTriggerHandler = async (event) => {
  if (event.triggerSource === "CustomMessage_ForgotPassword") {
    const locale = event.request.userAttributes["locale"];
    if (locale === "en") {
      event.response.emailMessage = `Your new one-time code is ${event.request.codeParameter}`;
      event.response.emailSubject = "Reset my password";
    } else if (locale === "es") {
      event.response.emailMessage = `Tu nuevo código de un solo uso es ${event.request.codeParameter}`;
      event.response.emailSubject = "Restablecer mi contraseña";
    }
  }

  return event;
};
```

Lastly, set the newly created function resource on your auth resource:

```typescript
import { defineAuth } from '@aws-amplify/backend';
import { customMessage } from "./custom-message/resource";

export const auth = defineAuth({
  triggers: {
    customMessage,
  }
});
```

In a React application, you would use this custom message trigger in the same way, by defining the function and handler, and then setting the trigger on your auth resource. After deploying the changes, whenever a user attempts to reset a password, they will receive an email with a one-time code in the language specified by their `locale` attribute.
In Amplify Gen 2, the CLI generates an `amplify_outputs.json` file that contains your backend's outputs, such as your Data endpoint and Auth metadata. This file is used to configure client libraries to interact with your backend resources. It's created locally when using `ampx sandbox` and automatically in Amplify's CI/CD based on the Amplify app ID and git branch. You can also create it manually using `ampx generate outputs`.

The `amplify_outputs.json` file is designed to be extendable to suit your application's evolving needs. You can use the `addOutput` method from your `backend` to programmatically add configurations, which is useful for customizing outputs not directly exposed through Amplify constructs or for dynamically adjusting your app's configuration.

However, overriding Amplify-managed configurations on `amplify_outputs.json` is not supported.

You can add custom outputs or extend existing configurations without manual file edits. For example, you can add output parameters that specify an S3 bucket and its region for storing files. In your backend, you can use the `addOutput` method to add the configuration:
```javascript
const backend = defineBackend({
  auth, 
  data, 
});

backend.addOutput({
  storage: {
    aws_region: "us-east-1",
    bucket_name: "my-externally-managed-bucket",
  },
});
```
In your React application, you can configure Amplify using the `amplify_outputs.json` file:
```javascript
import Amplify from "aws-amplify";
import outputs from "@/amplify_outputs.json";

Amplify.configure(outputs);
```
You can also add custom output parameters to your `amplify_outputs.json` file. This is useful for surfacing arbitrary outputs, values from custom CDK resources, or any other information necessary for your application's logic or configuration. For example:
```javascript
const backend = defineBackend({
  auth, 
  data, 
});

backend.addOutput({
  custom: {
    api_id: "restAPIId",
    api_endpoint: "https://api.example.com",
    api_name: "restApiName",
  },
});
```
In your React application, you can access these custom configurations as follows:
```javascript
import Amplify from "aws-amplify";
import outputs from "@/amplify_outputs.json";

Amplify.configure(outputs);
const currentConfig = Amplify.getConfig(); 
Amplify.configure({
 ...currentConfig,
  API: {
    REST: {
      [outputs.custom.api_name]: {
        endpoint: outputs.custom.api_endpoint,
        region: "us-east-1",
      },
    },
  },
});
```
The Amplify outputs file is defined using a JSON schema, which can be found in the `aws-amplify/amplify-backend` repository. The schema defines the structure of the `amplify_outputs.json` file, including the available properties and their data types.
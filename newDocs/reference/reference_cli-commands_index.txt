This page is a reference for commands found in the @aws-amplify/backend-cli package. All commands can be prefixed with AWS CLI environment variables to change the AWS account behavior with Amplify Gen 2 commands.

### npx ampx sandbox

The `npx ampx sandbox` command enables you to develop your backend alongside your frontend's development server. It deploys to your personal cloud sandbox and automatically watches for changes in the amplify/ folder, redeploying each time you save a file.

Options:
- `--dir-to-watch` (string) - Directory to watch for file changes. Defaults to the amplify directory.
- `--exclude` (string[]) - An array of paths or glob patterns to ignore.
- `--identifier` (string) - An optional name to distinguish between different sandbox environments. Default is the name of the system user executing the process.
- `--outputs-out-dir` (string) - A path to a directory where the client config file is written. If not provided, defaults to the working directory of the current process.
- `--outputs-format` (string) - Format in which the client config file is written (choices: json, dart).
- `--outputs-version` (string) - Version of the configuration. Version 0 represents classic amplify-cli config file amplify-configuration and 1 represents newer config file amplify_outputs (choices: 0, 1).
- `--profile` (string) - An AWS profile name.
- `--stream-function-logs` (boolean) - Whether to stream function execution logs. (default: false)
- `--logs-filter` (string[]) - Regex pattern to filter logs from only matched functions.
- `--logs-out-file` (string) - File to append the streaming logs.

Usage:
```bash
npx ampx sandbox
```

You can use the `--profile` flag to run sandbox with an AWS profile other than default:
```bash
npx ampx sandbox --profile my-other-profile
```
Alternatively, you can use AWS CLI environment variables to specify a different profile:
```bash
AWS_PROFILE=my-other-profile ampx sandbox
```

You can also use AWS environment variables to deploy to a Region other than your AWS profile's configured Region:
```bash
AWS_REGION=us-west-2 ampx sandbox
```

For mobile applications, you need to set the output directory and format of the generated configuration file:
```bash
# for Android
npx ampx sandbox --outputs-out-dir app/src/main/res
# for Swift/iOS
npx ampx sandbox
# for Flutter
npx ampx sandbox --outputs-format dart --outputs-out-dir lib
```

### npx ampx sandbox delete

The `npx ampx sandbox delete` command deletes your personal cloud sandbox. This should only be used if you have an active cloud sandbox that you opted to not delete when exiting `npx ampx sandbox`.

Options:
- `--name` (string) - An optional name to distinguish between different sandbox environments. Default is the name in your package.json.
- `--profile` (string) - An AWS profile name.
- `-y, --yes` (boolean) - Do not ask for confirmation before deleting the sandbox environment.

Usage:
```bash
npx ampx sandbox delete
```

### npx ampx sandbox secret

The `npx ampx sandbox secret` command manages backend secrets used with your personal cloud sandbox.

Options:
- `--profile` (string) - An AWS profile name.

Usage:
```bash
npx ampx sandbox secret
```

You can use the `--profile` flag to run sandbox with an AWS profile other than default:
```bash
npx ampx sandbox secret list --profile my-other-profile
```
Alternatively, you can use AWS environment variables to specify a different profile:
```bash
AWS_PROFILE=my-other-profile ampx sandbox secret list
```

To create a secret, use `sandbox secret set`:
```bash
npx ampx sandbox secret set LOGINWITHAMAZON_CLIENT_ID
```

To remove a secret, use `sandbox secret remove`:
```bash
npx ampx sandbox secret remove LOGINWITHAMAZON_CLIENT_ID
```

To list all available secrets, use:
```bash
npx ampx sandbox secret list
```

To get a secret and view its details, use:
```bash
npx ampx sandbox secret get LOGINWITHAMAZON_CLIENT_ID
```

### npx ampx generate

The `npx ampx generate` command is used to generate information or code that is supplemental to your frontend development.

Each subcommand requires either a CloudFormation stack name or an existing Amplify App ID and corresponding git branch:
```bash
# with CloudFormation stack name
npx ampx generate <subcommand> --stack <cloudformation-stack-name>
# with Amplify App ID and git branch
npx ampx generate <subcommand> --app-id <app-id> --branch <git-branch-name>
```

### npx ampx generate outputs

The `npx ampx generate outputs` command generates the backend outputs file (e.g. `amplify_outputs.json`) for your frontend application to consume.

Options:
- `--profile` (string) - An AWS profile name.
- `--format` (string) - The format into which the configuration should be exported (choices: json, dart).
- `--out-dir` (string) - A path to the directory where config is written. If not provided, it defaults to the working directory of the current process.
- `--outputs-version` (string) - Version of the configuration. Version 0 represents classic amplify-cli config file amplify-configuration and 1 represents newer config file amplify_outputs (choices: 0, 1).

Usage:
```bash
npx ampx generate outputs --stack amplify-nextamplifygen2-josef-sandbox-ca85e1081b
```

For mobile applications, you can specify an alternate outputs file format:
```bash
npx ampx generate outputs --stack amplify-nextamplifygen2-josef-sandbox-ca85e1081b
```

### npx ampx generate graphql-client-code

The `npx ampx generate graphql-client-code` command generates GraphQL statements and types for your frontend application to consume.

Options:
- `--stack` (string) - A stack name that contains an Amplify backend.
- `--app-id` (string) - The Amplify App ID of the project.
- `--branch` (string) - A git branch of the Amplify project.
- `--out` (string) - Specifies the path to the directory where the config is written. If not provided, defaults to the current process working directory.
- `--format` (string) - Specifies the format of the GraphQL client code to be generated.
- `--model-target` (string) - Specifies the modelgen export target.
- `--statement-target` (string) - Specifies the graphql-codegen statement export target.
- `--statement-max-depth` (integer) - Specifies the maximum depth of the generated GraphQL statements.
- `--type-target` (string) - Specifies the optional graphql-codegen type export target.
- `--all` (boolean) - Shows hidden options.
- `--profile` (string) - Specifies an AWS profile name.
- `--debug` (boolean) - Print debug logs to the console.
- `--help` (boolean) - Displays help information about the command.

Usage:
```bash
npx ampx generate graphql-client-code --app-id <your-amplify-app-id> --branch staging
```

You can generate GraphQL client code for a branch that is connected to Amplify:
```bash
npx ampx generate graphql-client-code --branch staging
```

You can also generate codegen for a CDK app using a joint "AmplifyBackendStack" construct:
```bash
npx ampx generate graphql-client-code --stack Backend --platform ts --out./src
```

You can generate codegen in a specific language and format:
```bash
npx ampx generate graphql-client-code --format modelgen --type-target angular
```

### npx ampx generate forms

The `npx ampx generate forms` command generates React form components derived from your backend data models for your frontend application to consume.

Options:
- `--stack` (string) - A stack name that contains an Amplify backend.
- `--branch` (string) - Name of the git branch being deployed.
- `--app-id` (string) - The app id of the target Amplify app.
- `--out-dir` (string) - A path to directory where generated forms are written. Defaults to the./ui-components directory.
- `--models` (array) - Model name to generate.
- `--profile` (string) - An AWS profile name.

Usage:
```bash
npx ampx generate forms --branch $BRANCH_NAME --app-id $AWS_APP_ID --out-dir./src
```

### npx ampx info

The `npx ampx info` command generates information on system, binaries, npm packages, and environment variables for troubleshooting Amplify issues.

Usage:
```bash
npx ampx info
```

### npx ampx pipeline-deploy

The `npx ampx pipeline-deploy` command deploys the Amplify project in a CI/CD pipeline for a specified Amplify app and branch.

Options:
- `--branch` (string) - Name of the git branch being deployed.
- `--app-id` (string) - The app id of the target Amplify app.
- `--outputs-out-dir` (string) - A path to a directory where the client config file is written. If not provided, defaults to the working directory of the current process.
- `--outputs-version` (string) - Version of the configuration. Version 0 represents classic amplify-cli config file amplify-configuration and 1 represents newer config file amplify_outputs (choices: 0, 1).

Usage:
```bash
npx ampx pipeline-deploy --branch $BRANCH_NAME --app-id $AWS_APP_ID
```
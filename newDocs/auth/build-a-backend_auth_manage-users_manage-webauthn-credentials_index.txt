WebAuthn registration and authentication are not currently supported on React Native, other passwordless features are fully supported.

Amplify Auth enables your users to associate, keep track of, and delete passkeys. To register a passkey, the user must be authenticated and have at least one other first-factor authentication mechanism associated with their account.

You can associate a passkey using the following code:
```javascript
import { associateWebAuthnCredential } from 'aws-amplify/auth';

await associateWebAuthnCredential();
```
This will prompt the user to register a passkey using their local authenticator, which will then be associated with Cognito.

To list registered passkeys, you can use the following code:
```javascript
import { listWebAuthnCredentials } from 'aws-amplify/auth';

const result = await listWebAuthnCredentials();

for (const credential of result.credentials) {
  console.log(`Credential ID: ${credential.credentialId}`);
  console.log(`Friendly Name: ${credential.friendlyCredentialName}`);
  console.log(`Relying Party ID: ${credential.relyingPartyId}`);
  console.log(`Created At: ${credential.createdAt}`);
}
```
To delete a passkey, you can use the following code:
```javascript
import { deleteWebAuthnCredential } from 'aws-amplify/auth';

const id = "credential-id-to-delete";

await deleteWebAuthnCredential({
  credentialId: id
});
```
Here is a practical example that uses the list and delete APIs together. In this example, the user has 3 passkeys registered. They want to list all passkeys while using a `pageSize` of 2 as well as delete the first passkey in the list.
```javascript
import { 
  listWebAuthnCredentials,
  deleteWebAuthnCredential
} from 'aws-amplify/auth';

let passkeys = [];

const result = await listWebAuthnCredentials({ pageSize: 2 });

passkeys.push(...result.credentials);

const nextPage = await listWebAuthnCredentials({
  pageSize: 2,
  nextToken: result.nextToken,
});

passkeys.push(...nextPage.credentials);

const id = passkeys[0].credentialId;

await deleteWebAuthnCredential({
  credentialId: id
});
```
Amplify provides a client library that enables you to interact with backend resources such as Amplify Auth. The quickest way to get started with Amplify Auth in your frontend application is with the Authenticator component, which provides a customizable UI and complete authentication flows.

To get started, you can use the `signUp()` API to create a new user in your backend. The `signUp` API response will include a `nextStep` property, which can be used to determine if further action is required. It may return the following next steps: 
- `CONFIRM_SIGN_UP`: The sign up needs to be confirmed by collecting a code from the user and calling `confirmSignUp`.
- `DONE`: The sign up process has been fully completed.
- `COMPLETE_AUTO_SIGN_IN`: The sign up process needs to complete by invoking the `autoSignIn` API.

Here's an example of how to use the `signUp` API in React:
```tsx
import { signUp } from "aws-amplify/auth"

const { isSignUpComplete, userId, nextStep } = await signUp({
  username: "hello@mycompany.com",
  password: "hunter2",
  options: {
    userAttributes: {
      email: "hello@mycompany.com",
      phone_number: "+15555555555" 
    },
  }
});
```
You can confirm the sign-up after receiving a confirmation code from the user:
```typescript
import { confirmSignUp } from 'aws-amplify/auth';

const { isSignUpComplete, nextStep } = await confirmSignUp({
  username: "hello@mycompany.com",
  confirmationCode: "123456"
});
```
Your application's users can also sign up using passwordless methods. To learn more, visit the concepts page for passwordless.

For passwordless sign-up with SMS OTP, you can use the following code:
```typescript
// Sign up using a phone number
const { nextStep: signUpNextStep } = await signUp({
	username: 'hello',
	options: {
		userAttributes: {
			phone_number: '+15555551234',
		},
	},
});

// Confirm sign up with the OTP received
const { nextStep: confirmSignUpNextStep } = await confirmSignUp({
	username: 'hello',
	confirmationCode: '123456',
});
```
For passwordless sign-up with Email OTP, you can use the following code:
```typescript
// Sign up using an email address
const { nextStep: signUpNextStep } = await signUp({
	username: 'hello',
	options: {
		userAttributes: {
			email: 'hello@example.com',
		},
	},
});

// Confirm sign up with the OTP received
const { nextStep: confirmSignUpNextStep } = await confirmSignUp({
	username: 'hello',
	confirmationCode: '123456',
});
```
For auto sign-in, you can use the following code:
```typescript
// Call `signUp` API with `USER_AUTH` as the authentication flow type for `autoSignIn`
const { nextStep: signUpNextStep } = await signUp({
	username: 'hello',
	options: {
		userAttributes: {
			email: 'hello@example.com',
			phone_number: '+15555551234',
		},
		autoSignIn: {
			authFlowType: 'USER_AUTH',
		},
	},
});

// Call `confirmSignUp` API to complete the flow
const { nextStep: confirmSignUpNextStep } = await confirmSignUp({
	username: 'hello',
	confirmationCode: '123456',
});

// Call `autoSignIn` API to complete the flow
const { nextStep } = await autoSignIn();
```